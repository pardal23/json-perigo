
import { GoogleGenAI } from "@google/genai";
import { BannerSize } from '../types';

if (!process.env.API_KEY) {
    console.error("API_KEY environment variable not set.");
}

const ai = new GoogleGenAI({ apiKey: process.env.API_KEY! });

export async function generateBannerAd(
    productDescription: string,
    productUrl: string,
    bannerSize: BannerSize
): Promise<string> {
    const prompt = `Create a visually stunning, professional, high-quality banner ad for an online advertising campaign.
    
    **Product Description:** ${productDescription}
    **Website:** ${productUrl}
    **Target Audience:** General audience, potential online shoppers.
    
    **Instructions:**
    - The ad must be eye-catching and modern.
    - DO NOT include any text, logos, or words on the image. The image should be a background or product feature that allows text to be overlaid later.
    - The style should be clean, vibrant, and professional.
    - The image must be suitable for the banner dimensions: ${bannerSize.width}x${bannerSize.height} pixels.
    - Generate a photographic or high-quality illustrative image, not a cartoon or drawing.
    - Focus on the product's key benefits or aesthetics as described.`;

    try {
        const response = await ai.models.generateImages({
            model: 'imagen-4.0-generate-001',
            prompt: prompt,
            config: {
                numberOfImages: 1,
                aspectRatio: bannerSize.aspectRatio,
                outputMimeType: 'image/png',
            },
        });

        if (response.generatedImages && response.generatedImages.length > 0) {
            const base64ImageBytes = response.generatedImages[0].image.imageBytes;
            return `data:image/png;base64,${base64ImageBytes}`;
        } else {
            throw new Error("No image was generated by the API.");
        }
    } catch (error) {
        console.error(`Error generating banner for size ${bannerSize.name}:`, error);
        throw error;
    }
}
